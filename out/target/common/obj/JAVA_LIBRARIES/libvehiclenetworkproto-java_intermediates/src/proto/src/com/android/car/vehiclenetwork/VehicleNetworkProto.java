// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packages/services/Car/libvehiclenetwork/proto/VehicleNetworkProto.proto

package com.android.car.vehiclenetwork;

public final class VehicleNetworkProto {
  private VehicleNetworkProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface VehiclePropConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VehiclePropConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 prop = 1;</code>
     */
    boolean hasProp();
    /**
     * <code>required int32 prop = 1;</code>
     */
    int getProp();

    /**
     * <code>required int32 access = 2;</code>
     */
    boolean hasAccess();
    /**
     * <code>required int32 access = 2;</code>
     */
    int getAccess();

    /**
     * <code>required int32 change_mode = 3;</code>
     */
    boolean hasChangeMode();
    /**
     * <code>required int32 change_mode = 3;</code>
     */
    int getChangeMode();

    /**
     * <code>required int32 value_type = 4;</code>
     */
    boolean hasValueType();
    /**
     * <code>required int32 value_type = 4;</code>
     */
    int getValueType();

    /**
     * <code>required int32 permission_model = 5;</code>
     */
    boolean hasPermissionModel();
    /**
     * <code>required int32 permission_model = 5;</code>
     */
    int getPermissionModel();

    /**
     * <code>optional int32 zones = 6;</code>
     */
    boolean hasZones();
    /**
     * <code>optional int32 zones = 6;</code>
     */
    int getZones();

    /**
     * <code>repeated int32 config_array = 7;</code>
     */
    java.util.List<java.lang.Integer> getConfigArrayList();
    /**
     * <code>repeated int32 config_array = 7;</code>
     */
    int getConfigArrayCount();
    /**
     * <code>repeated int32 config_array = 7;</code>
     */
    int getConfigArray(int index);

    /**
     * <code>required float sample_rate_max = 8;</code>
     */
    boolean hasSampleRateMax();
    /**
     * <code>required float sample_rate_max = 8;</code>
     */
    float getSampleRateMax();

    /**
     * <code>required float sample_rate_min = 9;</code>
     */
    boolean hasSampleRateMin();
    /**
     * <code>required float sample_rate_min = 9;</code>
     */
    float getSampleRateMin();

    /**
     * <code>optional string config_string = 10;</code>
     */
    boolean hasConfigString();
    /**
     * <code>optional string config_string = 10;</code>
     */
    java.lang.String getConfigString();
    /**
     * <code>optional string config_string = 10;</code>
     */
    com.google.protobuf.ByteString
        getConfigStringBytes();

    /**
     * <code>repeated float float_maxs = 11;</code>
     */
    java.util.List<java.lang.Float> getFloatMaxsList();
    /**
     * <code>repeated float float_maxs = 11;</code>
     */
    int getFloatMaxsCount();
    /**
     * <code>repeated float float_maxs = 11;</code>
     */
    float getFloatMaxs(int index);

    /**
     * <code>repeated float float_mins = 12;</code>
     */
    java.util.List<java.lang.Float> getFloatMinsList();
    /**
     * <code>repeated float float_mins = 12;</code>
     */
    int getFloatMinsCount();
    /**
     * <code>repeated float float_mins = 12;</code>
     */
    float getFloatMins(int index);

    /**
     * <code>repeated int32 int32_maxs = 13;</code>
     */
    java.util.List<java.lang.Integer> getInt32MaxsList();
    /**
     * <code>repeated int32 int32_maxs = 13;</code>
     */
    int getInt32MaxsCount();
    /**
     * <code>repeated int32 int32_maxs = 13;</code>
     */
    int getInt32Maxs(int index);

    /**
     * <code>repeated int32 int32_mins = 14;</code>
     */
    java.util.List<java.lang.Integer> getInt32MinsList();
    /**
     * <code>repeated int32 int32_mins = 14;</code>
     */
    int getInt32MinsCount();
    /**
     * <code>repeated int32 int32_mins = 14;</code>
     */
    int getInt32Mins(int index);

    /**
     * <code>repeated int64 int64_maxs = 15;</code>
     */
    java.util.List<java.lang.Long> getInt64MaxsList();
    /**
     * <code>repeated int64 int64_maxs = 15;</code>
     */
    int getInt64MaxsCount();
    /**
     * <code>repeated int64 int64_maxs = 15;</code>
     */
    long getInt64Maxs(int index);

    /**
     * <code>repeated int64 int64_mins = 16;</code>
     */
    java.util.List<java.lang.Long> getInt64MinsList();
    /**
     * <code>repeated int64 int64_mins = 16;</code>
     */
    int getInt64MinsCount();
    /**
     * <code>repeated int64 int64_mins = 16;</code>
     */
    long getInt64Mins(int index);
  }
  /**
   * Protobuf type {@code VehiclePropConfig}
   */
  public static final class VehiclePropConfig extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:VehiclePropConfig)
      VehiclePropConfigOrBuilder {
    // Use VehiclePropConfig.newBuilder() to construct.
    private VehiclePropConfig(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VehiclePropConfig(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final VehiclePropConfig defaultInstance;
    public static VehiclePropConfig getDefaultInstance() {
      return defaultInstance;
    }

    public VehiclePropConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private VehiclePropConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              prop_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              access_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              changeMode_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              valueType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              permissionModel_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              zones_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                configArray_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              configArray_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                configArray_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                configArray_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 69: {
              bitField0_ |= 0x00000040;
              sampleRateMax_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000080;
              sampleRateMin_ = input.readFloat();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              configString_ = bs;
              break;
            }
            case 93: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                floatMaxs_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000400;
              }
              floatMaxs_.add(input.readFloat());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                floatMaxs_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatMaxs_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 101: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                floatMins_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000800;
              }
              floatMins_.add(input.readFloat());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                floatMins_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatMins_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                int32Maxs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              int32Maxs_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                int32Maxs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Maxs_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                int32Mins_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              int32Mins_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                int32Mins_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Mins_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                int64Maxs_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00004000;
              }
              int64Maxs_.add(input.readInt64());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                int64Maxs_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Maxs_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                int64Mins_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00008000;
              }
              int64Mins_.add(input.readInt64());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                int64Mins_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                int64Mins_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          configArray_ = java.util.Collections.unmodifiableList(configArray_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          floatMaxs_ = java.util.Collections.unmodifiableList(floatMaxs_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          floatMins_ = java.util.Collections.unmodifiableList(floatMins_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          int32Maxs_ = java.util.Collections.unmodifiableList(int32Maxs_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          int32Mins_ = java.util.Collections.unmodifiableList(int32Mins_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          int64Maxs_ = java.util.Collections.unmodifiableList(int64Maxs_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          int64Mins_ = java.util.Collections.unmodifiableList(int64Mins_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<VehiclePropConfig> PARSER =
        new com.google.protobuf.AbstractParser<VehiclePropConfig>() {
      public VehiclePropConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehiclePropConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VehiclePropConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PROP_FIELD_NUMBER = 1;
    private int prop_;
    /**
     * <code>required int32 prop = 1;</code>
     */
    public boolean hasProp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 prop = 1;</code>
     */
    public int getProp() {
      return prop_;
    }

    public static final int ACCESS_FIELD_NUMBER = 2;
    private int access_;
    /**
     * <code>required int32 access = 2;</code>
     */
    public boolean hasAccess() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 access = 2;</code>
     */
    public int getAccess() {
      return access_;
    }

    public static final int CHANGE_MODE_FIELD_NUMBER = 3;
    private int changeMode_;
    /**
     * <code>required int32 change_mode = 3;</code>
     */
    public boolean hasChangeMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 change_mode = 3;</code>
     */
    public int getChangeMode() {
      return changeMode_;
    }

    public static final int VALUE_TYPE_FIELD_NUMBER = 4;
    private int valueType_;
    /**
     * <code>required int32 value_type = 4;</code>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 value_type = 4;</code>
     */
    public int getValueType() {
      return valueType_;
    }

    public static final int PERMISSION_MODEL_FIELD_NUMBER = 5;
    private int permissionModel_;
    /**
     * <code>required int32 permission_model = 5;</code>
     */
    public boolean hasPermissionModel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 permission_model = 5;</code>
     */
    public int getPermissionModel() {
      return permissionModel_;
    }

    public static final int ZONES_FIELD_NUMBER = 6;
    private int zones_;
    /**
     * <code>optional int32 zones = 6;</code>
     */
    public boolean hasZones() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 zones = 6;</code>
     */
    public int getZones() {
      return zones_;
    }

    public static final int CONFIG_ARRAY_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> configArray_;
    /**
     * <code>repeated int32 config_array = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getConfigArrayList() {
      return configArray_;
    }
    /**
     * <code>repeated int32 config_array = 7;</code>
     */
    public int getConfigArrayCount() {
      return configArray_.size();
    }
    /**
     * <code>repeated int32 config_array = 7;</code>
     */
    public int getConfigArray(int index) {
      return configArray_.get(index);
    }

    public static final int SAMPLE_RATE_MAX_FIELD_NUMBER = 8;
    private float sampleRateMax_;
    /**
     * <code>required float sample_rate_max = 8;</code>
     */
    public boolean hasSampleRateMax() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float sample_rate_max = 8;</code>
     */
    public float getSampleRateMax() {
      return sampleRateMax_;
    }

    public static final int SAMPLE_RATE_MIN_FIELD_NUMBER = 9;
    private float sampleRateMin_;
    /**
     * <code>required float sample_rate_min = 9;</code>
     */
    public boolean hasSampleRateMin() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float sample_rate_min = 9;</code>
     */
    public float getSampleRateMin() {
      return sampleRateMin_;
    }

    public static final int CONFIG_STRING_FIELD_NUMBER = 10;
    private java.lang.Object configString_;
    /**
     * <code>optional string config_string = 10;</code>
     */
    public boolean hasConfigString() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string config_string = 10;</code>
     */
    public java.lang.String getConfigString() {
      java.lang.Object ref = configString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          configString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string config_string = 10;</code>
     */
    public com.google.protobuf.ByteString
        getConfigStringBytes() {
      java.lang.Object ref = configString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        configString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOAT_MAXS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Float> floatMaxs_;
    /**
     * <code>repeated float float_maxs = 11;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatMaxsList() {
      return floatMaxs_;
    }
    /**
     * <code>repeated float float_maxs = 11;</code>
     */
    public int getFloatMaxsCount() {
      return floatMaxs_.size();
    }
    /**
     * <code>repeated float float_maxs = 11;</code>
     */
    public float getFloatMaxs(int index) {
      return floatMaxs_.get(index);
    }

    public static final int FLOAT_MINS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Float> floatMins_;
    /**
     * <code>repeated float float_mins = 12;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatMinsList() {
      return floatMins_;
    }
    /**
     * <code>repeated float float_mins = 12;</code>
     */
    public int getFloatMinsCount() {
      return floatMins_.size();
    }
    /**
     * <code>repeated float float_mins = 12;</code>
     */
    public float getFloatMins(int index) {
      return floatMins_.get(index);
    }

    public static final int INT32_MAXS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> int32Maxs_;
    /**
     * <code>repeated int32 int32_maxs = 13;</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32MaxsList() {
      return int32Maxs_;
    }
    /**
     * <code>repeated int32 int32_maxs = 13;</code>
     */
    public int getInt32MaxsCount() {
      return int32Maxs_.size();
    }
    /**
     * <code>repeated int32 int32_maxs = 13;</code>
     */
    public int getInt32Maxs(int index) {
      return int32Maxs_.get(index);
    }

    public static final int INT32_MINS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> int32Mins_;
    /**
     * <code>repeated int32 int32_mins = 14;</code>
     */
    public java.util.List<java.lang.Integer>
        getInt32MinsList() {
      return int32Mins_;
    }
    /**
     * <code>repeated int32 int32_mins = 14;</code>
     */
    public int getInt32MinsCount() {
      return int32Mins_.size();
    }
    /**
     * <code>repeated int32 int32_mins = 14;</code>
     */
    public int getInt32Mins(int index) {
      return int32Mins_.get(index);
    }

    public static final int INT64_MAXS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Long> int64Maxs_;
    /**
     * <code>repeated int64 int64_maxs = 15;</code>
     */
    public java.util.List<java.lang.Long>
        getInt64MaxsList() {
      return int64Maxs_;
    }
    /**
     * <code>repeated int64 int64_maxs = 15;</code>
     */
    public int getInt64MaxsCount() {
      return int64Maxs_.size();
    }
    /**
     * <code>repeated int64 int64_maxs = 15;</code>
     */
    public long getInt64Maxs(int index) {
      return int64Maxs_.get(index);
    }

    public static final int INT64_MINS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Long> int64Mins_;
    /**
     * <code>repeated int64 int64_mins = 16;</code>
     */
    public java.util.List<java.lang.Long>
        getInt64MinsList() {
      return int64Mins_;
    }
    /**
     * <code>repeated int64 int64_mins = 16;</code>
     */
    public int getInt64MinsCount() {
      return int64Mins_.size();
    }
    /**
     * <code>repeated int64 int64_mins = 16;</code>
     */
    public long getInt64Mins(int index) {
      return int64Mins_.get(index);
    }

    private void initFields() {
      prop_ = 0;
      access_ = 0;
      changeMode_ = 0;
      valueType_ = 0;
      permissionModel_ = 0;
      zones_ = 0;
      configArray_ = java.util.Collections.emptyList();
      sampleRateMax_ = 0F;
      sampleRateMin_ = 0F;
      configString_ = "";
      floatMaxs_ = java.util.Collections.emptyList();
      floatMins_ = java.util.Collections.emptyList();
      int32Maxs_ = java.util.Collections.emptyList();
      int32Mins_ = java.util.Collections.emptyList();
      int64Maxs_ = java.util.Collections.emptyList();
      int64Mins_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasProp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChangeMode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPermissionModel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSampleRateMax()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSampleRateMin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, prop_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, access_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, changeMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, valueType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, permissionModel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, zones_);
      }
      for (int i = 0; i < configArray_.size(); i++) {
        output.writeInt32(7, configArray_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(8, sampleRateMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(9, sampleRateMin_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getConfigStringBytes());
      }
      for (int i = 0; i < floatMaxs_.size(); i++) {
        output.writeFloat(11, floatMaxs_.get(i));
      }
      for (int i = 0; i < floatMins_.size(); i++) {
        output.writeFloat(12, floatMins_.get(i));
      }
      for (int i = 0; i < int32Maxs_.size(); i++) {
        output.writeInt32(13, int32Maxs_.get(i));
      }
      for (int i = 0; i < int32Mins_.size(); i++) {
        output.writeInt32(14, int32Mins_.get(i));
      }
      for (int i = 0; i < int64Maxs_.size(); i++) {
        output.writeInt64(15, int64Maxs_.get(i));
      }
      for (int i = 0; i < int64Mins_.size(); i++) {
        output.writeInt64(16, int64Mins_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, prop_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, access_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, changeMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, valueType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, permissionModel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, zones_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < configArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(configArray_.get(i));
        }
        size += dataSize;
        size += 1 * getConfigArrayList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, sampleRateMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, sampleRateMin_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getConfigStringBytes());
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatMaxsList().size();
        size += dataSize;
        size += 1 * getFloatMaxsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatMinsList().size();
        size += dataSize;
        size += 1 * getFloatMinsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Maxs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Maxs_.get(i));
        }
        size += dataSize;
        size += 1 * getInt32MaxsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Mins_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Mins_.get(i));
        }
        size += dataSize;
        size += 1 * getInt32MinsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Maxs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Maxs_.get(i));
        }
        size += dataSize;
        size += 1 * getInt64MaxsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int64Mins_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(int64Mins_.get(i));
        }
        size += dataSize;
        size += 2 * getInt64MinsList().size();
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code VehiclePropConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:VehiclePropConfig)
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigOrBuilder {
      // Construct using com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        prop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        access_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        changeMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        permissionModel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        zones_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        configArray_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        sampleRateMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        sampleRateMin_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        configString_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        floatMaxs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        floatMins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        int32Maxs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        int32Mins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        int64Maxs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        int64Mins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig getDefaultInstanceForType() {
        return com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig.getDefaultInstance();
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig build() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig buildPartial() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig result = new com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prop_ = prop_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.access_ = access_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.changeMode_ = changeMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.permissionModel_ = permissionModel_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.zones_ = zones_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          configArray_ = java.util.Collections.unmodifiableList(configArray_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.configArray_ = configArray_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sampleRateMax_ = sampleRateMax_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sampleRateMin_ = sampleRateMin_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.configString_ = configString_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          floatMaxs_ = java.util.Collections.unmodifiableList(floatMaxs_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.floatMaxs_ = floatMaxs_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          floatMins_ = java.util.Collections.unmodifiableList(floatMins_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.floatMins_ = floatMins_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          int32Maxs_ = java.util.Collections.unmodifiableList(int32Maxs_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.int32Maxs_ = int32Maxs_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          int32Mins_ = java.util.Collections.unmodifiableList(int32Mins_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.int32Mins_ = int32Mins_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          int64Maxs_ = java.util.Collections.unmodifiableList(int64Maxs_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.int64Maxs_ = int64Maxs_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          int64Mins_ = java.util.Collections.unmodifiableList(int64Mins_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.int64Mins_ = int64Mins_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig other) {
        if (other == com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig.getDefaultInstance()) return this;
        if (other.hasProp()) {
          setProp(other.getProp());
        }
        if (other.hasAccess()) {
          setAccess(other.getAccess());
        }
        if (other.hasChangeMode()) {
          setChangeMode(other.getChangeMode());
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasPermissionModel()) {
          setPermissionModel(other.getPermissionModel());
        }
        if (other.hasZones()) {
          setZones(other.getZones());
        }
        if (!other.configArray_.isEmpty()) {
          if (configArray_.isEmpty()) {
            configArray_ = other.configArray_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureConfigArrayIsMutable();
            configArray_.addAll(other.configArray_);
          }
          
        }
        if (other.hasSampleRateMax()) {
          setSampleRateMax(other.getSampleRateMax());
        }
        if (other.hasSampleRateMin()) {
          setSampleRateMin(other.getSampleRateMin());
        }
        if (other.hasConfigString()) {
          bitField0_ |= 0x00000200;
          configString_ = other.configString_;
          
        }
        if (!other.floatMaxs_.isEmpty()) {
          if (floatMaxs_.isEmpty()) {
            floatMaxs_ = other.floatMaxs_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureFloatMaxsIsMutable();
            floatMaxs_.addAll(other.floatMaxs_);
          }
          
        }
        if (!other.floatMins_.isEmpty()) {
          if (floatMins_.isEmpty()) {
            floatMins_ = other.floatMins_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureFloatMinsIsMutable();
            floatMins_.addAll(other.floatMins_);
          }
          
        }
        if (!other.int32Maxs_.isEmpty()) {
          if (int32Maxs_.isEmpty()) {
            int32Maxs_ = other.int32Maxs_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureInt32MaxsIsMutable();
            int32Maxs_.addAll(other.int32Maxs_);
          }
          
        }
        if (!other.int32Mins_.isEmpty()) {
          if (int32Mins_.isEmpty()) {
            int32Mins_ = other.int32Mins_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureInt32MinsIsMutable();
            int32Mins_.addAll(other.int32Mins_);
          }
          
        }
        if (!other.int64Maxs_.isEmpty()) {
          if (int64Maxs_.isEmpty()) {
            int64Maxs_ = other.int64Maxs_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureInt64MaxsIsMutable();
            int64Maxs_.addAll(other.int64Maxs_);
          }
          
        }
        if (!other.int64Mins_.isEmpty()) {
          if (int64Mins_.isEmpty()) {
            int64Mins_ = other.int64Mins_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureInt64MinsIsMutable();
            int64Mins_.addAll(other.int64Mins_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProp()) {
          
          return false;
        }
        if (!hasAccess()) {
          
          return false;
        }
        if (!hasChangeMode()) {
          
          return false;
        }
        if (!hasValueType()) {
          
          return false;
        }
        if (!hasPermissionModel()) {
          
          return false;
        }
        if (!hasSampleRateMax()) {
          
          return false;
        }
        if (!hasSampleRateMin()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int prop_ ;
      /**
       * <code>required int32 prop = 1;</code>
       */
      public boolean hasProp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 prop = 1;</code>
       */
      public int getProp() {
        return prop_;
      }
      /**
       * <code>required int32 prop = 1;</code>
       */
      public Builder setProp(int value) {
        bitField0_ |= 0x00000001;
        prop_ = value;
        
        return this;
      }
      /**
       * <code>required int32 prop = 1;</code>
       */
      public Builder clearProp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        prop_ = 0;
        
        return this;
      }

      private int access_ ;
      /**
       * <code>required int32 access = 2;</code>
       */
      public boolean hasAccess() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 access = 2;</code>
       */
      public int getAccess() {
        return access_;
      }
      /**
       * <code>required int32 access = 2;</code>
       */
      public Builder setAccess(int value) {
        bitField0_ |= 0x00000002;
        access_ = value;
        
        return this;
      }
      /**
       * <code>required int32 access = 2;</code>
       */
      public Builder clearAccess() {
        bitField0_ = (bitField0_ & ~0x00000002);
        access_ = 0;
        
        return this;
      }

      private int changeMode_ ;
      /**
       * <code>required int32 change_mode = 3;</code>
       */
      public boolean hasChangeMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 change_mode = 3;</code>
       */
      public int getChangeMode() {
        return changeMode_;
      }
      /**
       * <code>required int32 change_mode = 3;</code>
       */
      public Builder setChangeMode(int value) {
        bitField0_ |= 0x00000004;
        changeMode_ = value;
        
        return this;
      }
      /**
       * <code>required int32 change_mode = 3;</code>
       */
      public Builder clearChangeMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        changeMode_ = 0;
        
        return this;
      }

      private int valueType_ ;
      /**
       * <code>required int32 value_type = 4;</code>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 value_type = 4;</code>
       */
      public int getValueType() {
        return valueType_;
      }
      /**
       * <code>required int32 value_type = 4;</code>
       */
      public Builder setValueType(int value) {
        bitField0_ |= 0x00000008;
        valueType_ = value;
        
        return this;
      }
      /**
       * <code>required int32 value_type = 4;</code>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        valueType_ = 0;
        
        return this;
      }

      private int permissionModel_ ;
      /**
       * <code>required int32 permission_model = 5;</code>
       */
      public boolean hasPermissionModel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 permission_model = 5;</code>
       */
      public int getPermissionModel() {
        return permissionModel_;
      }
      /**
       * <code>required int32 permission_model = 5;</code>
       */
      public Builder setPermissionModel(int value) {
        bitField0_ |= 0x00000010;
        permissionModel_ = value;
        
        return this;
      }
      /**
       * <code>required int32 permission_model = 5;</code>
       */
      public Builder clearPermissionModel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        permissionModel_ = 0;
        
        return this;
      }

      private int zones_ ;
      /**
       * <code>optional int32 zones = 6;</code>
       */
      public boolean hasZones() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 zones = 6;</code>
       */
      public int getZones() {
        return zones_;
      }
      /**
       * <code>optional int32 zones = 6;</code>
       */
      public Builder setZones(int value) {
        bitField0_ |= 0x00000020;
        zones_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 zones = 6;</code>
       */
      public Builder clearZones() {
        bitField0_ = (bitField0_ & ~0x00000020);
        zones_ = 0;
        
        return this;
      }

      private java.util.List<java.lang.Integer> configArray_ = java.util.Collections.emptyList();
      private void ensureConfigArrayIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          configArray_ = new java.util.ArrayList<java.lang.Integer>(configArray_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 config_array = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getConfigArrayList() {
        return java.util.Collections.unmodifiableList(configArray_);
      }
      /**
       * <code>repeated int32 config_array = 7;</code>
       */
      public int getConfigArrayCount() {
        return configArray_.size();
      }
      /**
       * <code>repeated int32 config_array = 7;</code>
       */
      public int getConfigArray(int index) {
        return configArray_.get(index);
      }
      /**
       * <code>repeated int32 config_array = 7;</code>
       */
      public Builder setConfigArray(
          int index, int value) {
        ensureConfigArrayIsMutable();
        configArray_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 config_array = 7;</code>
       */
      public Builder addConfigArray(int value) {
        ensureConfigArrayIsMutable();
        configArray_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 config_array = 7;</code>
       */
      public Builder addAllConfigArray(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureConfigArrayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, configArray_);
        
        return this;
      }
      /**
       * <code>repeated int32 config_array = 7;</code>
       */
      public Builder clearConfigArray() {
        configArray_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        
        return this;
      }

      private float sampleRateMax_ ;
      /**
       * <code>required float sample_rate_max = 8;</code>
       */
      public boolean hasSampleRateMax() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float sample_rate_max = 8;</code>
       */
      public float getSampleRateMax() {
        return sampleRateMax_;
      }
      /**
       * <code>required float sample_rate_max = 8;</code>
       */
      public Builder setSampleRateMax(float value) {
        bitField0_ |= 0x00000080;
        sampleRateMax_ = value;
        
        return this;
      }
      /**
       * <code>required float sample_rate_max = 8;</code>
       */
      public Builder clearSampleRateMax() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sampleRateMax_ = 0F;
        
        return this;
      }

      private float sampleRateMin_ ;
      /**
       * <code>required float sample_rate_min = 9;</code>
       */
      public boolean hasSampleRateMin() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float sample_rate_min = 9;</code>
       */
      public float getSampleRateMin() {
        return sampleRateMin_;
      }
      /**
       * <code>required float sample_rate_min = 9;</code>
       */
      public Builder setSampleRateMin(float value) {
        bitField0_ |= 0x00000100;
        sampleRateMin_ = value;
        
        return this;
      }
      /**
       * <code>required float sample_rate_min = 9;</code>
       */
      public Builder clearSampleRateMin() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sampleRateMin_ = 0F;
        
        return this;
      }

      private java.lang.Object configString_ = "";
      /**
       * <code>optional string config_string = 10;</code>
       */
      public boolean hasConfigString() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string config_string = 10;</code>
       */
      public java.lang.String getConfigString() {
        java.lang.Object ref = configString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            configString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string config_string = 10;</code>
       */
      public com.google.protobuf.ByteString
          getConfigStringBytes() {
        java.lang.Object ref = configString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          configString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string config_string = 10;</code>
       */
      public Builder setConfigString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        configString_ = value;
        
        return this;
      }
      /**
       * <code>optional string config_string = 10;</code>
       */
      public Builder clearConfigString() {
        bitField0_ = (bitField0_ & ~0x00000200);
        configString_ = getDefaultInstance().getConfigString();
        
        return this;
      }
      /**
       * <code>optional string config_string = 10;</code>
       */
      public Builder setConfigStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        configString_ = value;
        
        return this;
      }

      private java.util.List<java.lang.Float> floatMaxs_ = java.util.Collections.emptyList();
      private void ensureFloatMaxsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          floatMaxs_ = new java.util.ArrayList<java.lang.Float>(floatMaxs_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated float float_maxs = 11;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatMaxsList() {
        return java.util.Collections.unmodifiableList(floatMaxs_);
      }
      /**
       * <code>repeated float float_maxs = 11;</code>
       */
      public int getFloatMaxsCount() {
        return floatMaxs_.size();
      }
      /**
       * <code>repeated float float_maxs = 11;</code>
       */
      public float getFloatMaxs(int index) {
        return floatMaxs_.get(index);
      }
      /**
       * <code>repeated float float_maxs = 11;</code>
       */
      public Builder setFloatMaxs(
          int index, float value) {
        ensureFloatMaxsIsMutable();
        floatMaxs_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated float float_maxs = 11;</code>
       */
      public Builder addFloatMaxs(float value) {
        ensureFloatMaxsIsMutable();
        floatMaxs_.add(value);
        
        return this;
      }
      /**
       * <code>repeated float float_maxs = 11;</code>
       */
      public Builder addAllFloatMaxs(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatMaxsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatMaxs_);
        
        return this;
      }
      /**
       * <code>repeated float float_maxs = 11;</code>
       */
      public Builder clearFloatMaxs() {
        floatMaxs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        
        return this;
      }

      private java.util.List<java.lang.Float> floatMins_ = java.util.Collections.emptyList();
      private void ensureFloatMinsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          floatMins_ = new java.util.ArrayList<java.lang.Float>(floatMins_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated float float_mins = 12;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatMinsList() {
        return java.util.Collections.unmodifiableList(floatMins_);
      }
      /**
       * <code>repeated float float_mins = 12;</code>
       */
      public int getFloatMinsCount() {
        return floatMins_.size();
      }
      /**
       * <code>repeated float float_mins = 12;</code>
       */
      public float getFloatMins(int index) {
        return floatMins_.get(index);
      }
      /**
       * <code>repeated float float_mins = 12;</code>
       */
      public Builder setFloatMins(
          int index, float value) {
        ensureFloatMinsIsMutable();
        floatMins_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated float float_mins = 12;</code>
       */
      public Builder addFloatMins(float value) {
        ensureFloatMinsIsMutable();
        floatMins_.add(value);
        
        return this;
      }
      /**
       * <code>repeated float float_mins = 12;</code>
       */
      public Builder addAllFloatMins(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatMinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatMins_);
        
        return this;
      }
      /**
       * <code>repeated float float_mins = 12;</code>
       */
      public Builder clearFloatMins() {
        floatMins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        
        return this;
      }

      private java.util.List<java.lang.Integer> int32Maxs_ = java.util.Collections.emptyList();
      private void ensureInt32MaxsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          int32Maxs_ = new java.util.ArrayList<java.lang.Integer>(int32Maxs_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 int32_maxs = 13;</code>
       */
      public java.util.List<java.lang.Integer>
          getInt32MaxsList() {
        return java.util.Collections.unmodifiableList(int32Maxs_);
      }
      /**
       * <code>repeated int32 int32_maxs = 13;</code>
       */
      public int getInt32MaxsCount() {
        return int32Maxs_.size();
      }
      /**
       * <code>repeated int32 int32_maxs = 13;</code>
       */
      public int getInt32Maxs(int index) {
        return int32Maxs_.get(index);
      }
      /**
       * <code>repeated int32 int32_maxs = 13;</code>
       */
      public Builder setInt32Maxs(
          int index, int value) {
        ensureInt32MaxsIsMutable();
        int32Maxs_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_maxs = 13;</code>
       */
      public Builder addInt32Maxs(int value) {
        ensureInt32MaxsIsMutable();
        int32Maxs_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_maxs = 13;</code>
       */
      public Builder addAllInt32Maxs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32MaxsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Maxs_);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_maxs = 13;</code>
       */
      public Builder clearInt32Maxs() {
        int32Maxs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        
        return this;
      }

      private java.util.List<java.lang.Integer> int32Mins_ = java.util.Collections.emptyList();
      private void ensureInt32MinsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          int32Mins_ = new java.util.ArrayList<java.lang.Integer>(int32Mins_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 int32_mins = 14;</code>
       */
      public java.util.List<java.lang.Integer>
          getInt32MinsList() {
        return java.util.Collections.unmodifiableList(int32Mins_);
      }
      /**
       * <code>repeated int32 int32_mins = 14;</code>
       */
      public int getInt32MinsCount() {
        return int32Mins_.size();
      }
      /**
       * <code>repeated int32 int32_mins = 14;</code>
       */
      public int getInt32Mins(int index) {
        return int32Mins_.get(index);
      }
      /**
       * <code>repeated int32 int32_mins = 14;</code>
       */
      public Builder setInt32Mins(
          int index, int value) {
        ensureInt32MinsIsMutable();
        int32Mins_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_mins = 14;</code>
       */
      public Builder addInt32Mins(int value) {
        ensureInt32MinsIsMutable();
        int32Mins_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_mins = 14;</code>
       */
      public Builder addAllInt32Mins(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32MinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Mins_);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_mins = 14;</code>
       */
      public Builder clearInt32Mins() {
        int32Mins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        
        return this;
      }

      private java.util.List<java.lang.Long> int64Maxs_ = java.util.Collections.emptyList();
      private void ensureInt64MaxsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          int64Maxs_ = new java.util.ArrayList<java.lang.Long>(int64Maxs_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int64 int64_maxs = 15;</code>
       */
      public java.util.List<java.lang.Long>
          getInt64MaxsList() {
        return java.util.Collections.unmodifiableList(int64Maxs_);
      }
      /**
       * <code>repeated int64 int64_maxs = 15;</code>
       */
      public int getInt64MaxsCount() {
        return int64Maxs_.size();
      }
      /**
       * <code>repeated int64 int64_maxs = 15;</code>
       */
      public long getInt64Maxs(int index) {
        return int64Maxs_.get(index);
      }
      /**
       * <code>repeated int64 int64_maxs = 15;</code>
       */
      public Builder setInt64Maxs(
          int index, long value) {
        ensureInt64MaxsIsMutable();
        int64Maxs_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int64 int64_maxs = 15;</code>
       */
      public Builder addInt64Maxs(long value) {
        ensureInt64MaxsIsMutable();
        int64Maxs_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int64 int64_maxs = 15;</code>
       */
      public Builder addAllInt64Maxs(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64MaxsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Maxs_);
        
        return this;
      }
      /**
       * <code>repeated int64 int64_maxs = 15;</code>
       */
      public Builder clearInt64Maxs() {
        int64Maxs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        
        return this;
      }

      private java.util.List<java.lang.Long> int64Mins_ = java.util.Collections.emptyList();
      private void ensureInt64MinsIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          int64Mins_ = new java.util.ArrayList<java.lang.Long>(int64Mins_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int64 int64_mins = 16;</code>
       */
      public java.util.List<java.lang.Long>
          getInt64MinsList() {
        return java.util.Collections.unmodifiableList(int64Mins_);
      }
      /**
       * <code>repeated int64 int64_mins = 16;</code>
       */
      public int getInt64MinsCount() {
        return int64Mins_.size();
      }
      /**
       * <code>repeated int64 int64_mins = 16;</code>
       */
      public long getInt64Mins(int index) {
        return int64Mins_.get(index);
      }
      /**
       * <code>repeated int64 int64_mins = 16;</code>
       */
      public Builder setInt64Mins(
          int index, long value) {
        ensureInt64MinsIsMutable();
        int64Mins_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int64 int64_mins = 16;</code>
       */
      public Builder addInt64Mins(long value) {
        ensureInt64MinsIsMutable();
        int64Mins_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int64 int64_mins = 16;</code>
       */
      public Builder addAllInt64Mins(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInt64MinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int64Mins_);
        
        return this;
      }
      /**
       * <code>repeated int64 int64_mins = 16;</code>
       */
      public Builder clearInt64Mins() {
        int64Mins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VehiclePropConfig)
    }

    static {
      defaultInstance = new VehiclePropConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VehiclePropConfig)
  }

  public interface VehiclePropConfigsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VehiclePropConfigs)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig> 
        getConfigsList();
    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig getConfigs(int index);
    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    int getConfigsCount();
  }
  /**
   * Protobuf type {@code VehiclePropConfigs}
   */
  public static final class VehiclePropConfigs extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:VehiclePropConfigs)
      VehiclePropConfigsOrBuilder {
    // Use VehiclePropConfigs.newBuilder() to construct.
    private VehiclePropConfigs(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VehiclePropConfigs(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final VehiclePropConfigs defaultInstance;
    public static VehiclePropConfigs getDefaultInstance() {
      return defaultInstance;
    }

    public VehiclePropConfigs getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private VehiclePropConfigs(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                configs_ = new java.util.ArrayList<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig>();
                mutable_bitField0_ |= 0x00000001;
              }
              configs_.add(input.readMessage(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          configs_ = java.util.Collections.unmodifiableList(configs_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<VehiclePropConfigs> PARSER =
        new com.google.protobuf.AbstractParser<VehiclePropConfigs>() {
      public VehiclePropConfigs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehiclePropConfigs(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VehiclePropConfigs> getParserForType() {
      return PARSER;
    }

    public static final int CONFIGS_FIELD_NUMBER = 1;
    private java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig> configs_;
    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    public java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig> getConfigsList() {
      return configs_;
    }
    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    public java.util.List<? extends com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigOrBuilder> 
        getConfigsOrBuilderList() {
      return configs_;
    }
    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    public int getConfigsCount() {
      return configs_.size();
    }
    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig getConfigs(int index) {
      return configs_.get(index);
    }
    /**
     * <code>repeated .VehiclePropConfig configs = 1;</code>
     */
    public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigOrBuilder getConfigsOrBuilder(
        int index) {
      return configs_.get(index);
    }

    private void initFields() {
      configs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getConfigsCount(); i++) {
        if (!getConfigs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < configs_.size(); i++) {
        output.writeMessage(1, configs_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < configs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, configs_.get(i));
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code VehiclePropConfigs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:VehiclePropConfigs)
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigsOrBuilder {
      // Construct using com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        configs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs getDefaultInstanceForType() {
        return com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs.getDefaultInstance();
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs build() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs buildPartial() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs result = new com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          configs_ = java.util.Collections.unmodifiableList(configs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.configs_ = configs_;
        return result;
      }

      public Builder mergeFrom(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs other) {
        if (other == com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs.getDefaultInstance()) return this;
        if (!other.configs_.isEmpty()) {
          if (configs_.isEmpty()) {
            configs_ = other.configs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureConfigsIsMutable();
            configs_.addAll(other.configs_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getConfigsCount(); i++) {
          if (!getConfigs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfigs) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig> configs_ =
        java.util.Collections.emptyList();
      private void ensureConfigsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          configs_ = new java.util.ArrayList<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig>(configs_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig> getConfigsList() {
        return java.util.Collections.unmodifiableList(configs_);
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public int getConfigsCount() {
        return configs_.size();
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig getConfigs(int index) {
        return configs_.get(index);
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder setConfigs(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConfigsIsMutable();
        configs_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder setConfigs(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig.Builder builderForValue) {
        ensureConfigsIsMutable();
        configs_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder addConfigs(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConfigsIsMutable();
        configs_.add(value);

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder addConfigs(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConfigsIsMutable();
        configs_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder addConfigs(
          com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig.Builder builderForValue) {
        ensureConfigsIsMutable();
        configs_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder addConfigs(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig.Builder builderForValue) {
        ensureConfigsIsMutable();
        configs_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder addAllConfigs(
          java.lang.Iterable<? extends com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropConfig> values) {
        ensureConfigsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, configs_);

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder clearConfigs() {
        configs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .VehiclePropConfig configs = 1;</code>
       */
      public Builder removeConfigs(int index) {
        ensureConfigsIsMutable();
        configs_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:VehiclePropConfigs)
    }

    static {
      defaultInstance = new VehiclePropConfigs(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VehiclePropConfigs)
  }

  public interface VehiclePropValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VehiclePropValue)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int32 prop = 1;</code>
     *
     * <pre>
     * common data
     * </pre>
     */
    boolean hasProp();
    /**
     * <code>required int32 prop = 1;</code>
     *
     * <pre>
     * common data
     * </pre>
     */
    int getProp();

    /**
     * <code>required int32 value_type = 2;</code>
     */
    boolean hasValueType();
    /**
     * <code>required int32 value_type = 2;</code>
     */
    int getValueType();

    /**
     * <code>optional int64 timestamp = 3;</code>
     *
     * <pre>
     * required for valid data from HAL, but can be skipped for set.
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 3;</code>
     *
     * <pre>
     * required for valid data from HAL, but can be skipped for set.
     * </pre>
     */
    long getTimestamp();

    /**
     * <code>optional int32 zone = 4;</code>
     *
     * <pre>
     * values
     * </pre>
     */
    boolean hasZone();
    /**
     * <code>optional int32 zone = 4;</code>
     *
     * <pre>
     * values
     * </pre>
     */
    int getZone();

    /**
     * <code>repeated int32 int32_values = 5;</code>
     *
     * <pre>
     * this also covers boolean value.
     * </pre>
     */
    java.util.List<java.lang.Integer> getInt32ValuesList();
    /**
     * <code>repeated int32 int32_values = 5;</code>
     *
     * <pre>
     * this also covers boolean value.
     * </pre>
     */
    int getInt32ValuesCount();
    /**
     * <code>repeated int32 int32_values = 5;</code>
     *
     * <pre>
     * this also covers boolean value.
     * </pre>
     */
    int getInt32Values(int index);

    /**
     * <code>optional int64 int64_value = 6;</code>
     */
    boolean hasInt64Value();
    /**
     * <code>optional int64 int64_value = 6;</code>
     */
    long getInt64Value();

    /**
     * <code>repeated float float_values = 7;</code>
     */
    java.util.List<java.lang.Float> getFloatValuesList();
    /**
     * <code>repeated float float_values = 7;</code>
     */
    int getFloatValuesCount();
    /**
     * <code>repeated float float_values = 7;</code>
     */
    float getFloatValues(int index);

    /**
     * <code>optional string string_value = 8;</code>
     */
    boolean hasStringValue();
    /**
     * <code>optional string string_value = 8;</code>
     */
    java.lang.String getStringValue();
    /**
     * <code>optional string string_value = 8;</code>
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>optional bytes bytes_value = 9;</code>
     */
    boolean hasBytesValue();
    /**
     * <code>optional bytes bytes_value = 9;</code>
     */
    com.google.protobuf.ByteString getBytesValue();
  }
  /**
   * Protobuf type {@code VehiclePropValue}
   */
  public static final class VehiclePropValue extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:VehiclePropValue)
      VehiclePropValueOrBuilder {
    // Use VehiclePropValue.newBuilder() to construct.
    private VehiclePropValue(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VehiclePropValue(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final VehiclePropValue defaultInstance;
    public static VehiclePropValue getDefaultInstance() {
      return defaultInstance;
    }

    public VehiclePropValue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private VehiclePropValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              prop_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              valueType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              zone_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                int32Values_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              int32Values_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                int32Values_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                int32Values_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              int64Value_ = input.readInt64();
              break;
            }
            case 61: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                floatValues_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000040;
              }
              floatValues_.add(input.readFloat());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                floatValues_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                floatValues_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              stringValue_ = bs;
              break;
            }
            case 74: {
              bitField0_ |= 0x00000040;
              bytesValue_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          int32Values_ = java.util.Collections.unmodifiableList(int32Values_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          floatValues_ = java.util.Collections.unmodifiableList(floatValues_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<VehiclePropValue> PARSER =
        new com.google.protobuf.AbstractParser<VehiclePropValue>() {
      public VehiclePropValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehiclePropValue(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VehiclePropValue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PROP_FIELD_NUMBER = 1;
    private int prop_;
    /**
     * <code>required int32 prop = 1;</code>
     *
     * <pre>
     * common data
     * </pre>
     */
    public boolean hasProp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 prop = 1;</code>
     *
     * <pre>
     * common data
     * </pre>
     */
    public int getProp() {
      return prop_;
    }

    public static final int VALUE_TYPE_FIELD_NUMBER = 2;
    private int valueType_;
    /**
     * <code>required int32 value_type = 2;</code>
     */
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 value_type = 2;</code>
     */
    public int getValueType() {
      return valueType_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 3;</code>
     *
     * <pre>
     * required for valid data from HAL, but can be skipped for set.
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 timestamp = 3;</code>
     *
     * <pre>
     * required for valid data from HAL, but can be skipped for set.
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int ZONE_FIELD_NUMBER = 4;
    private int zone_;
    /**
     * <code>optional int32 zone = 4;</code>
     *
     * <pre>
     * values
     * </pre>
     */
    public boolean hasZone() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 zone = 4;</code>
     *
     * <pre>
     * values
     * </pre>
     */
    public int getZone() {
      return zone_;
    }

    public static final int INT32_VALUES_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> int32Values_;
    /**
     * <code>repeated int32 int32_values = 5;</code>
     *
     * <pre>
     * this also covers boolean value.
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getInt32ValuesList() {
      return int32Values_;
    }
    /**
     * <code>repeated int32 int32_values = 5;</code>
     *
     * <pre>
     * this also covers boolean value.
     * </pre>
     */
    public int getInt32ValuesCount() {
      return int32Values_.size();
    }
    /**
     * <code>repeated int32 int32_values = 5;</code>
     *
     * <pre>
     * this also covers boolean value.
     * </pre>
     */
    public int getInt32Values(int index) {
      return int32Values_.get(index);
    }

    public static final int INT64_VALUE_FIELD_NUMBER = 6;
    private long int64Value_;
    /**
     * <code>optional int64 int64_value = 6;</code>
     */
    public boolean hasInt64Value() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 int64_value = 6;</code>
     */
    public long getInt64Value() {
      return int64Value_;
    }

    public static final int FLOAT_VALUES_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Float> floatValues_;
    /**
     * <code>repeated float float_values = 7;</code>
     */
    public java.util.List<java.lang.Float>
        getFloatValuesList() {
      return floatValues_;
    }
    /**
     * <code>repeated float float_values = 7;</code>
     */
    public int getFloatValuesCount() {
      return floatValues_.size();
    }
    /**
     * <code>repeated float float_values = 7;</code>
     */
    public float getFloatValues(int index) {
      return floatValues_.get(index);
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 8;
    private java.lang.Object stringValue_;
    /**
     * <code>optional string string_value = 8;</code>
     */
    public boolean hasStringValue() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string string_value = 8;</code>
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stringValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string string_value = 8;</code>
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = stringValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stringValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_VALUE_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString bytesValue_;
    /**
     * <code>optional bytes bytes_value = 9;</code>
     */
    public boolean hasBytesValue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes bytes_value = 9;</code>
     */
    public com.google.protobuf.ByteString getBytesValue() {
      return bytesValue_;
    }

    private void initFields() {
      prop_ = 0;
      valueType_ = 0;
      timestamp_ = 0L;
      zone_ = 0;
      int32Values_ = java.util.Collections.emptyList();
      int64Value_ = 0L;
      floatValues_ = java.util.Collections.emptyList();
      stringValue_ = "";
      bytesValue_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasProp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, prop_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, valueType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, zone_);
      }
      for (int i = 0; i < int32Values_.size(); i++) {
        output.writeInt32(5, int32Values_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, int64Value_);
      }
      for (int i = 0; i < floatValues_.size(); i++) {
        output.writeFloat(7, floatValues_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(8, getStringValueBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(9, bytesValue_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, prop_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, valueType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, zone_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < int32Values_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(int32Values_.get(i));
        }
        size += dataSize;
        size += 1 * getInt32ValuesList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, int64Value_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFloatValuesList().size();
        size += dataSize;
        size += 1 * getFloatValuesList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getStringValueBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, bytesValue_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code VehiclePropValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:VehiclePropValue)
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValueOrBuilder {
      // Construct using com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        prop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        valueType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        zone_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        int32Values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        int64Value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        floatValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        stringValue_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        bytesValue_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue getDefaultInstanceForType() {
        return com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue.getDefaultInstance();
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue build() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue buildPartial() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue result = new com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prop_ = prop_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.valueType_ = valueType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.zone_ = zone_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          int32Values_ = java.util.Collections.unmodifiableList(int32Values_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.int32Values_ = int32Values_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.int64Value_ = int64Value_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          floatValues_ = java.util.Collections.unmodifiableList(floatValues_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.floatValues_ = floatValues_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.stringValue_ = stringValue_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bytesValue_ = bytesValue_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue other) {
        if (other == com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue.getDefaultInstance()) return this;
        if (other.hasProp()) {
          setProp(other.getProp());
        }
        if (other.hasValueType()) {
          setValueType(other.getValueType());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasZone()) {
          setZone(other.getZone());
        }
        if (!other.int32Values_.isEmpty()) {
          if (int32Values_.isEmpty()) {
            int32Values_ = other.int32Values_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureInt32ValuesIsMutable();
            int32Values_.addAll(other.int32Values_);
          }
          
        }
        if (other.hasInt64Value()) {
          setInt64Value(other.getInt64Value());
        }
        if (!other.floatValues_.isEmpty()) {
          if (floatValues_.isEmpty()) {
            floatValues_ = other.floatValues_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureFloatValuesIsMutable();
            floatValues_.addAll(other.floatValues_);
          }
          
        }
        if (other.hasStringValue()) {
          bitField0_ |= 0x00000080;
          stringValue_ = other.stringValue_;
          
        }
        if (other.hasBytesValue()) {
          setBytesValue(other.getBytesValue());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProp()) {
          
          return false;
        }
        if (!hasValueType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int prop_ ;
      /**
       * <code>required int32 prop = 1;</code>
       *
       * <pre>
       * common data
       * </pre>
       */
      public boolean hasProp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 prop = 1;</code>
       *
       * <pre>
       * common data
       * </pre>
       */
      public int getProp() {
        return prop_;
      }
      /**
       * <code>required int32 prop = 1;</code>
       *
       * <pre>
       * common data
       * </pre>
       */
      public Builder setProp(int value) {
        bitField0_ |= 0x00000001;
        prop_ = value;
        
        return this;
      }
      /**
       * <code>required int32 prop = 1;</code>
       *
       * <pre>
       * common data
       * </pre>
       */
      public Builder clearProp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        prop_ = 0;
        
        return this;
      }

      private int valueType_ ;
      /**
       * <code>required int32 value_type = 2;</code>
       */
      public boolean hasValueType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 value_type = 2;</code>
       */
      public int getValueType() {
        return valueType_;
      }
      /**
       * <code>required int32 value_type = 2;</code>
       */
      public Builder setValueType(int value) {
        bitField0_ |= 0x00000002;
        valueType_ = value;
        
        return this;
      }
      /**
       * <code>required int32 value_type = 2;</code>
       */
      public Builder clearValueType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        valueType_ = 0;
        
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional int64 timestamp = 3;</code>
       *
       * <pre>
       * required for valid data from HAL, but can be skipped for set.
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 timestamp = 3;</code>
       *
       * <pre>
       * required for valid data from HAL, but can be skipped for set.
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional int64 timestamp = 3;</code>
       *
       * <pre>
       * required for valid data from HAL, but can be skipped for set.
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 timestamp = 3;</code>
       *
       * <pre>
       * required for valid data from HAL, but can be skipped for set.
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        
        return this;
      }

      private int zone_ ;
      /**
       * <code>optional int32 zone = 4;</code>
       *
       * <pre>
       * values
       * </pre>
       */
      public boolean hasZone() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 zone = 4;</code>
       *
       * <pre>
       * values
       * </pre>
       */
      public int getZone() {
        return zone_;
      }
      /**
       * <code>optional int32 zone = 4;</code>
       *
       * <pre>
       * values
       * </pre>
       */
      public Builder setZone(int value) {
        bitField0_ |= 0x00000008;
        zone_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 zone = 4;</code>
       *
       * <pre>
       * values
       * </pre>
       */
      public Builder clearZone() {
        bitField0_ = (bitField0_ & ~0x00000008);
        zone_ = 0;
        
        return this;
      }

      private java.util.List<java.lang.Integer> int32Values_ = java.util.Collections.emptyList();
      private void ensureInt32ValuesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          int32Values_ = new java.util.ArrayList<java.lang.Integer>(int32Values_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 int32_values = 5;</code>
       *
       * <pre>
       * this also covers boolean value.
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getInt32ValuesList() {
        return java.util.Collections.unmodifiableList(int32Values_);
      }
      /**
       * <code>repeated int32 int32_values = 5;</code>
       *
       * <pre>
       * this also covers boolean value.
       * </pre>
       */
      public int getInt32ValuesCount() {
        return int32Values_.size();
      }
      /**
       * <code>repeated int32 int32_values = 5;</code>
       *
       * <pre>
       * this also covers boolean value.
       * </pre>
       */
      public int getInt32Values(int index) {
        return int32Values_.get(index);
      }
      /**
       * <code>repeated int32 int32_values = 5;</code>
       *
       * <pre>
       * this also covers boolean value.
       * </pre>
       */
      public Builder setInt32Values(
          int index, int value) {
        ensureInt32ValuesIsMutable();
        int32Values_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_values = 5;</code>
       *
       * <pre>
       * this also covers boolean value.
       * </pre>
       */
      public Builder addInt32Values(int value) {
        ensureInt32ValuesIsMutable();
        int32Values_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_values = 5;</code>
       *
       * <pre>
       * this also covers boolean value.
       * </pre>
       */
      public Builder addAllInt32Values(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInt32ValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, int32Values_);
        
        return this;
      }
      /**
       * <code>repeated int32 int32_values = 5;</code>
       *
       * <pre>
       * this also covers boolean value.
       * </pre>
       */
      public Builder clearInt32Values() {
        int32Values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        
        return this;
      }

      private long int64Value_ ;
      /**
       * <code>optional int64 int64_value = 6;</code>
       */
      public boolean hasInt64Value() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 int64_value = 6;</code>
       */
      public long getInt64Value() {
        return int64Value_;
      }
      /**
       * <code>optional int64 int64_value = 6;</code>
       */
      public Builder setInt64Value(long value) {
        bitField0_ |= 0x00000020;
        int64Value_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 int64_value = 6;</code>
       */
      public Builder clearInt64Value() {
        bitField0_ = (bitField0_ & ~0x00000020);
        int64Value_ = 0L;
        
        return this;
      }

      private java.util.List<java.lang.Float> floatValues_ = java.util.Collections.emptyList();
      private void ensureFloatValuesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          floatValues_ = new java.util.ArrayList<java.lang.Float>(floatValues_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated float float_values = 7;</code>
       */
      public java.util.List<java.lang.Float>
          getFloatValuesList() {
        return java.util.Collections.unmodifiableList(floatValues_);
      }
      /**
       * <code>repeated float float_values = 7;</code>
       */
      public int getFloatValuesCount() {
        return floatValues_.size();
      }
      /**
       * <code>repeated float float_values = 7;</code>
       */
      public float getFloatValues(int index) {
        return floatValues_.get(index);
      }
      /**
       * <code>repeated float float_values = 7;</code>
       */
      public Builder setFloatValues(
          int index, float value) {
        ensureFloatValuesIsMutable();
        floatValues_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated float float_values = 7;</code>
       */
      public Builder addFloatValues(float value) {
        ensureFloatValuesIsMutable();
        floatValues_.add(value);
        
        return this;
      }
      /**
       * <code>repeated float float_values = 7;</code>
       */
      public Builder addAllFloatValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFloatValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, floatValues_);
        
        return this;
      }
      /**
       * <code>repeated float float_values = 7;</code>
       */
      public Builder clearFloatValues() {
        floatValues_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        
        return this;
      }

      private java.lang.Object stringValue_ = "";
      /**
       * <code>optional string string_value = 8;</code>
       */
      public boolean hasStringValue() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string string_value = 8;</code>
       */
      public java.lang.String getStringValue() {
        java.lang.Object ref = stringValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stringValue_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string string_value = 8;</code>
       */
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = stringValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stringValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string string_value = 8;</code>
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        stringValue_ = value;
        
        return this;
      }
      /**
       * <code>optional string string_value = 8;</code>
       */
      public Builder clearStringValue() {
        bitField0_ = (bitField0_ & ~0x00000080);
        stringValue_ = getDefaultInstance().getStringValue();
        
        return this;
      }
      /**
       * <code>optional string string_value = 8;</code>
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        stringValue_ = value;
        
        return this;
      }

      private com.google.protobuf.ByteString bytesValue_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes bytes_value = 9;</code>
       */
      public boolean hasBytesValue() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bytes bytes_value = 9;</code>
       */
      public com.google.protobuf.ByteString getBytesValue() {
        return bytesValue_;
      }
      /**
       * <code>optional bytes bytes_value = 9;</code>
       */
      public Builder setBytesValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        bytesValue_ = value;
        
        return this;
      }
      /**
       * <code>optional bytes bytes_value = 9;</code>
       */
      public Builder clearBytesValue() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bytesValue_ = getDefaultInstance().getBytesValue();
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VehiclePropValue)
    }

    static {
      defaultInstance = new VehiclePropValue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VehiclePropValue)
  }

  public interface VehiclePropValuesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VehiclePropValues)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue> 
        getValuesList();
    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue getValues(int index);
    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    int getValuesCount();
  }
  /**
   * Protobuf type {@code VehiclePropValues}
   */
  public static final class VehiclePropValues extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:VehiclePropValues)
      VehiclePropValuesOrBuilder {
    // Use VehiclePropValues.newBuilder() to construct.
    private VehiclePropValues(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VehiclePropValues(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final VehiclePropValues defaultInstance;
    public static VehiclePropValues getDefaultInstance() {
      return defaultInstance;
    }

    public VehiclePropValues getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private VehiclePropValues(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                values_ = new java.util.ArrayList<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(input.readMessage(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<VehiclePropValues> PARSER =
        new com.google.protobuf.AbstractParser<VehiclePropValues>() {
      public VehiclePropValues parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VehiclePropValues(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VehiclePropValues> getParserForType() {
      return PARSER;
    }

    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue> values_;
    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    public java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    public java.util.List<? extends com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValueOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .VehiclePropValue values = 1;</code>
     */
    public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValueOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    private void initFields() {
      values_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getValuesCount(); i++) {
        if (!getValues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(1, values_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, values_.get(i));
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code VehiclePropValues}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:VehiclePropValues)
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValuesOrBuilder {
      // Construct using com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues getDefaultInstanceForType() {
        return com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues.getDefaultInstance();
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues build() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues buildPartial() {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues result = new com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        return result;
      }

      public Builder mergeFrom(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues other) {
        if (other == com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getValuesCount(); i++) {
          if (!getValues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValues) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue>(values_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public java.util.List<com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue> getValuesList() {
        return java.util.Collections.unmodifiableList(values_);
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue getValues(int index) {
        return values_.get(index);
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder setValues(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder setValues(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue.Builder builderForValue) {
        ensureValuesIsMutable();
        values_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder addValues(com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.add(value);

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder addValues(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValuesIsMutable();
        values_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder addValues(
          com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue.Builder builderForValue) {
        ensureValuesIsMutable();
        values_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder addValues(
          int index, com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue.Builder builderForValue) {
        ensureValuesIsMutable();
        values_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends com.android.car.vehiclenetwork.VehicleNetworkProto.VehiclePropValue> values) {
        ensureValuesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, values_);

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder clearValues() {
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .VehiclePropValue values = 1;</code>
       */
      public Builder removeValues(int index) {
        ensureValuesIsMutable();
        values_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:VehiclePropValues)
    }

    static {
      defaultInstance = new VehiclePropValues(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VehiclePropValues)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
